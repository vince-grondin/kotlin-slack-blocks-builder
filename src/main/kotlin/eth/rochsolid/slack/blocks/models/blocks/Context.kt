package eth.rochsolid.slack.blocks.models.blocks

import eth.rochsolid.slack.blocks.models.elements.Element
import kotlinx.serialization.SerialName


/**
 * Displays contextual info, which can include both images and text.
 * Example ([view this in Block Kit Builder](https://api.slack.com/tools/block-kit-builder?blocks=%5B%0A%09%7B%0A%09%09%22type%22%3A%20%22context%22%2C%0A%09%09%22elements%22%3A%20%5B%0A%09%09%09%7B%0A%09%09%09%09%22type%22%3A%20%22image%22%2C%0A%09%09%09%09%22image_url%22%3A%20%22https%3A%2F%2Fimage.freepik.com%2Ffree-photo%2Fred-drawing-pin_1156-445.jpg%22%2C%0A%09%09%09%09%22alt_text%22%3A%20%22images%22%0A%09%09%09%7D%2C%0A%09%09%09%7B%0A%09%09%09%09%22type%22%3A%20%22mrkdwn%22%2C%0A%09%09%09%09%22text%22%3A%20%22Location%3A%20*Dogpatch*%22%0A%09%09%09%7D%0A%09%09%5D%0A%09%7D%0A%5D)):
 * ```json
 * {
 *   "type": "context",
 *   "elements": [
 *     {
 *       "type": "image",
 *       "image_url": "https://image.freepik.com/free-photo/red-drawing-pin_1156-445.jpg",
 *       "alt_text": "images"
 *     },
 *     {
 *       "type": "mrkdwn",
 *       "text": "Location: **Dogpatch**"
 *     }
 *   ]
 * }
 * ```
 */
data class Context(
    /**
     * A unique identifier for a block. If not specified, a block_id will be generated by the Slack API.
     * You can use this [blockID] when you receive an interaction payload to identify the source of the action.
     * Maximum length for this field is 255 characters. [blockID] should be unique for each message and each iteration
     * of a message. If a message is updated, use a new [blockID].
     */
    @SerialName("block_id")
    override val blockID: BlockID?,
    /**
     * An array of image elements and text objects. Maximum number of items is 10.
     */
    val elements: List<Element>
) : Block(type = Type.CONTEXT)
